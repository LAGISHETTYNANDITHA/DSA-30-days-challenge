{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\project\\\\eventmate-app\\\\frontend\\\\src\\\\components\\\\BookingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Box, Typography, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingForm = () => {\n  _s();\n  const [ticketCount, setTicketCount] = useState(1);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    try {\n      // Replace the URL with your booking API endpoint\n      const response = await fetch('/api/bookings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ticketCount\n        })\n      });\n      if (!response.ok) throw new Error('Failed to save booking');\n      setSuccess('Booking created successfully!');\n      setTicketCount(1);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 400,\n      mx: 'auto',\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      mb: 2,\n      children: \"Create Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Ticket Count\",\n        type: \"number\",\n        fullWidth: true,\n        required: true,\n        margin: \"normal\",\n        inputProps: {\n          min: 1\n        },\n        value: ticketCount,\n        onChange: e => setTicketCount(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        sx: {\n          mt: 2\n        },\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingForm, \"tFGjRYy4UNhdEik6VF8d9d1uGu0=\");\n_c = BookingForm;\nexport default BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","Typography","Alert","jsxDEV","_jsxDEV","BookingForm","_s","ticketCount","setTicketCount","error","setError","success","setSuccess","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","err","message","sx","maxWidth","mx","mt","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","severity","onSubmit","label","type","fullWidth","required","margin","inputProps","min","value","onChange","Number","target","color","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/project/eventmate-app/frontend/src/components/BookingForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Box, Typography, Alert } from '@mui/material';\n\nconst BookingForm = () => {\n  const [ticketCount, setTicketCount] = useState(1);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    try {\n      // Replace the URL with your booking API endpoint\n      const response = await fetch('/api/bookings', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ ticketCount }),\n      });\n      if (!response.ok) throw new Error('Failed to save booking');\n      setSuccess('Booking created successfully!');\n      setTicketCount(1);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <Box sx={{ maxWidth: 400, mx: 'auto', mt: 4 }}>\n      <Typography variant=\"h5\" mb={2}>Create Booking</Typography>\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n      {success && <Alert severity=\"success\" sx={{ mb: 2 }}>{success}</Alert>}\n      <form onSubmit={handleSubmit}>\n        <TextField\n          label=\"Ticket Count\"\n          type=\"number\"\n          fullWidth\n          required\n          margin=\"normal\"\n          inputProps={{ min: 1 }}\n          value={ticketCount}\n          onChange={(e) => setTicketCount(Number(e.target.value))}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" sx={{ mt: 2 }}>Book</Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default BookingForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}